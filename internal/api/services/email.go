package services

import (
	"fmt"
	"log"
	"strconv"

	"github.com/go-gomail/gomail"
	"github.com/spf13/viper"
)

// H√†m g·ª≠i email
func SendEmail(to string, subject string, body string) error {

	viper.SetConfigName("config")   // T√™n file (kh√¥ng bao g·ªìm ƒëu√¥i .yaml)
	viper.SetConfigType("yaml")     // Lo·∫°i file
	viper.AddConfigPath("././data") // ƒê∆∞·ªùng d·∫´n file (th∆∞ m·ª•c hi·ªán t·∫°i)

	// ƒê·ªçc file c·∫•u h√¨nh
	if err := viper.ReadInConfig(); err != nil {
		log.Fatalf("Error reading config file: %v", err)
	}

	// L·∫•y c√°c th√¥ng tin c·∫•u h√¨nh t·ª´ bi·∫øn m√¥i tr∆∞·ªùng
	emailHost := viper.GetString("email.host")
	emailPort := viper.GetString("email.port")
	emailUsername := viper.GetString("email.username")
	emailPassword := viper.GetString("email.password")

	// C·∫•u h√¨nh email
	mail := gomail.NewMessage()
	mail.SetHeader("From", emailUsername)
	mail.SetHeader("To", to)
	mail.SetHeader("Subject", subject)
	mail.SetBody("text/plain", body)

	// C·∫•u h√¨nh SMTP server
	portNumber, _ := strconv.Atoi(emailPort) // Chuy·ªÉn port sang ki·ªÉu s·ªë
	dialer := gomail.NewDialer(emailHost, portNumber, emailUsername, emailPassword)

	// G·ª≠i email
	err := dialer.DialAndSend(mail)
	if err != nil {
		return err
	}
	fmt.Println("üìß Email ƒë√£ g·ª≠i th√†nh c√¥ng t·ªõi", to)
	return nil
}
